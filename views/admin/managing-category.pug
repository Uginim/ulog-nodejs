.container.mt-4
    h4 카데고리 관리
    form
        form-group            
            .container
                .row
                    .col
                        button#create-group.btn.btn-outline-primary.btn-sm.ml-2 
                            svg(width="15" height="15")
                                line(x1="7" y1="3" x2="7" y2="12" stroke-width="2" stroke="#26b2a2")
                                line(x1="3" y1="7" x2="12" y2="7" stroke-width="2" stroke="#26b2a2")
                            span 그룹 추가
                        button#delete-group.btn.btn-outline-primary.btn-sm.ml-2
                            svg(width="15" height="15")
                                //- line(x1="7" y1="3" x2="7" y2="12" stroke-width="2" stroke="#26b2a2")
                                line(x1="3" y1="7" x2="12" y2="7" stroke-width="2" stroke="#26b2a2")
                            span 그룹 삭제
                        button#create-category.btn.btn-outline-primary.btn-sm.ml-2
                            svg(width="15" height="15")
                                line(x1="7" y1="3" x2="7" y2="12" stroke-width="2" stroke="#26b2a2")
                                line(x1="3" y1="7" x2="12" y2="7" stroke-width="2" stroke="#26b2a2")
                            span 카데고리 추가
                        button#delete-category.btn.btn-outline-primary.btn-sm.ml-2
                            svg(width="15" height="15")
                                //- line(x1="7" y1="3" x2="7" y2="12" stroke-width="2" stroke="#26b2a2")
                                line(x1="3" y1="7" x2="12" y2="7" stroke-width="2" stroke="#26b2a2")
                            span 카데고리 삭제
                        select#categories.form-control.mt-1(multiple size="15")
                            //- if categoryGroups
                            //-     each categoryGroup in categoryGroups
                            //-         option | #{categoryGroup.name}
                            //-         if categoryGroup.categories
                            //-             each category in categoryGroup.categories
                            //-                 option | #{category.name}
                    .col
                        form
                            .my-4
                            hr
                            .form-group
                                label 카데고리 이름
                                input.form-control(type='text')
    hr    
    button(class='btn mt-3 btn-lg btn-primary btn-block' type='submit') 저장
    script.
        var categoriesTab = document.querySelector('a[href="#categories"]');        
        categoriesTab.addEventListener('click',e=>{
            var xhr = new XMLHttpRequest();
            xhr.open('GET','/admin/categories');
            xhr.onload = () => {
                var categoryTreeElement = document.getElementById('categories');
                var categoryTreeContent = JSON.parse(xhr.response);
                var categoryGroups = categoryTreeContent.categoryGroups;
                var categories = categoryTreeContent.categories;
                //Make Tree Structure
                var treeStructure = {
                    root:[],
                    groups:{},
                    categories:{},
                };
                var missingChildren = {};
                var makeGroupNode = (group) => {
                    const {id, name, parentId} =group ; 
                    return {
                        type:'group',
                        id,
                        name,
                        parentId,
                        children : [],
                    };

                };
                var makeCategoryNode = (category) => {
                    const {id, name, categorygroupId } = category;
                    return {
                        type:'category',
                        id,
                        name,
                        parentId:categorygroupId,
                    }
                }
                categoryGroups.forEach(categoryGroup=>{
                    var newNode = makeGroupNode(categoryGroup);
                    if(!newNode.parentId){                        
                        treeStructure.root.push(newNode);                        
                    } else if(treeStructure.groups[newNode.id]) {
                        treeStructure.groups[newNode.id].children.push(newNode);
                    } else { // the missing child
                        if(!missingChildren[newNode.parentId]){
                            missingChildren[newNode.parentId] = [];                            
                        } 
                        missingChildren[newNode.parentId].push(newNode);
                    }
                    newNode.children= missingChildren[newNode.id];
                    treeStructure.groups[newNode.id]= newNode;
                    //- categoryTree.append();
                });
                categories.forEach(category=>{
                    var newNode = makeCategoryNode(category);
                    if(!newNode.parentId){
                        treeStructure.root.push(newNode); 
                    } else {
                        treeStructure.groups[newNode.id].children.push(newNode);
                    }
                    treeStructure.categories[newNode.id];
                });
                var makeElementFromNode = (node) => {
                    var newElemnt = document.createElement('option');
                    if(node.type==='category') {
                        style="background-image:url(images/volvo.png);"
                    } else if ( node.type === 'group'){

                    }
                    return newElement;
                };
                treeStructure.root.forEach(node=> {                    
                    categoryTreeElement.append();
                });
            };
            xhr.send();
        });

        var btnCreateGroup = document.getElementById('create-group');
        btnCreateGroup.addEventListener('click',(e)=> {
            e.preventDefault();
            var xhr = new XMLHttpRequest();
            xhr.open('GET','/admin/categorygroup/create');
            xhr.onload = (e) => {
                console.log(this.response);
            };
            xhr.send();
        });
        var btnCreateCategory = document.getElementById('create-category');
        btnCreateCategory.addEventListener('click',(e)=> {
            e.preventDefault();
            var xhr = new XMLHttpRequest();
            xhr.open('GET','/admin/category/create');
            xhr.onload = (e) => {
                console.log(xhr.response);
            };
            xhr.send();
        });
        
        